"use client";
import React, { useEffect, useState } from 'react';
import { Flex, Table, Button, Space, Modal, message } from 'antd';
import type { TableColumnsType } from 'antd';
import { createStyles } from 'antd-style';
import { useRouter } from 'next/navigation';

const useStyle = createStyles(({ css, token }) => {
  const { antCls } = token;
  return {
    customTable: css`
      ${antCls}-table {
        ${antCls}-table-container {
          ${antCls}-table-body,
          ${antCls}-table-content {
            scrollbar-width: thin;
            scrollbar-color: #eaeaea transparent;
            scrollbar-gutter: stable;
          }
        }
      }
    `,
  };
});


interface FixedDataType {
  key: React.Key;
  name: string;
  description: string;
}
interface CourseDataType {
  key: React.Key;
  coursePlanId: number;
  nameCourseTh: string;
  planCourse: string;
  totalCredit: number;
  generalSubjectCredit: number;
  specificSubjectCredit: number;
  freeSubjectCredit: number;
  coreSubjectCredit: number; // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö DB
  spacailSubjectCredit: number; // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö DB
  selectSubjectCredit: number; // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö DB
  happySubjectCredit: number; // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö DB
  entrepreneurshipSubjectCredit: number; // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö DB
  languageSubjectCredit: number; // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö DB
  peopleSubjectCredit: number; // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö DB
  aestheticsSubjectCredit: number; // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö DB
  internshipHours: number; // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö DB
  creditIntern: number; // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö DB
}

const App: React.FC = () => {
  const { styles } = useStyle();
  const [dataSource, setDataSource] = useState<CourseDataType[]>([]);
  const [loading, setLoading] = useState(true);
  const router = useRouter();
  const handleViewDetails = (id: number) => {
    // ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ details/‡∏ï‡∏≤‡∏° id ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤
    router.push(`/courses/details/${id}`);
  };

  const handleDelete = (id: number) => {
    Modal.confirm({
      title: '‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ?',
      content: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏ã‡πà‡∏≠‡∏ô ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö',
      okText: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô',
      cancelText: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å',
      onOk: async () => {
        try {
          // ‡∏™‡πà‡∏á request ‡πÑ‡∏õ‡∏¢‡∏±‡∏á API ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
          const response = await fetch(`/api/course`, {
            method: 'PATCH',
            headers: {
            'Content-Type': 'application/json',
          },
          // 3. ‡∏™‡πà‡∏á ID ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô body ‡∏Ç‡∏≠‡∏á request
          body: JSON.stringify({ id: id }),
          });

          if (!response.ok) {
            throw new Error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ');
          }

          // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô State ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
          setDataSource(dataSource.filter(item => item.key !== id));
          message.success('‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

        } catch (error) {
          console.error(error);
          message.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
        }
      },
    });
  };
  const fixedColumns: TableColumnsType<CourseDataType> = [

 { title: '‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£ (‡πÑ‡∏ó‡∏¢)', dataIndex: 'nameCourseTh', fixed: true, width: 200 },
  { title: '‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô', dataIndex: 'planCourse', width: 150,fixed: true },
  { title: '‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Å‡∏¥‡∏ï‡∏£‡∏ß‡∏°', dataIndex: 'totalCredit', width: 120 },
  { title: '‡∏´‡∏°‡∏ß‡∏î‡∏ß‡∏¥‡∏ä‡∏≤‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ', dataIndex: 'generalSubjectCredit', width: 150 },
  { title: '‡∏´‡∏°‡∏ß‡∏î‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞', dataIndex: 'specificSubjectCredit', width: 150 },
  { title: '‡∏´‡∏°‡∏ß‡∏î‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏™‡∏£‡∏µ', dataIndex: 'freeSubjectCredit', width: 150 },
  { title: '‡∏ß‡∏¥‡∏ä‡∏≤‡πÅ‡∏Å‡∏ô', dataIndex: 'coreSubjectCredit', width: 120 },
  { title: '‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏î‡πâ‡∏≤‡∏ô', dataIndex: 'spacailSubjectCredit', width: 150 },
  { title: '‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å', dataIndex: 'selectSubjectCredit', width: 120 },
  { title: '‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏≤‡∏£‡∏∞‡∏≠‡∏¢‡∏π‡πà‡∏î‡∏µ‡∏°‡∏µ‡∏™‡∏∏‡∏Ç', dataIndex: 'happySubjectCredit', width: 180 },
  { title: '‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏≤‡∏£‡∏∞‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÅ‡∏´‡πà‡∏á‡∏ú‡∏π‡πâ‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£', dataIndex: 'entrepreneurshipSubjectCredit', width: 220 },
  { title: '‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏≤‡∏£‡∏∞‡∏†‡∏≤‡∏©‡∏≤‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£', dataIndex: 'languageSubjectCredit', width: 220 },
  { title: '‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏≤‡∏£‡∏∞‡∏û‡∏•‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏î‡∏µ', dataIndex: 'peopleSubjectCredit', width: 180 },
  { title: '‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏≤‡∏£‡∏∞‡∏™‡∏∏‡∏ô‡∏ó‡∏£‡∏µ‡∏¢‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå', dataIndex: 'aestheticsSubjectCredit', width: 180 },
  { title: '‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô', dataIndex: 'internshipHours', width: 150 },
  { title: '‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Å‡∏¥‡∏ï‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô', dataIndex: 'creditIntern', width: 150 },
  {
      title: '‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£',
      key: 'action',
      fixed: 'right', // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡∏ß‡∏≤‡∏™‡∏∏‡∏î‡πÄ‡∏™‡∏°‡∏≠
      width: 250,
      render: (text, record) => ( // record ‡∏Ñ‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡πÅ‡∏ñ‡∏ß‡∏ô‡∏±‡πâ‡∏ô‡πÜ
        <Space size="middle">
          <Button onClick={() => handleViewDetails(record.coursePlanId)}>
            üëÅÔ∏è ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
          </Button>
          <Button type="primary" danger onClick={() => handleDelete(record.coursePlanId)}>
            üóëÔ∏è ‡∏•‡∏ö
          </Button>
        </Space>
      ),
    },
];
   useEffect(() => {
    const fetchData = async () => {
      try {
        setLoading(true);
        const response = await fetch('/api/course'); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å Endpoint ‡πÄ‡∏î‡∏¥‡∏°
        const data = await response.json();
        // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏£‡∏ì‡∏µ API ‡∏™‡πà‡∏á object/error ‡πÅ‡∏ó‡∏ô array
        if (Array.isArray(data)) {
          setDataSource(data);
        } else {
          console.warn('Unexpected /api/course payload:', data);
          setDataSource([]);
        }
        console.log(data);
      } catch (error) {
        console.error("Failed to fetch courses:", error);
        setDataSource([]);
      } finally {
        setLoading(false);
      }
    };

    fetchData();
  }, []);
  return (
    <Flex vertical gap="small">
      <div style={{ display: 'flex', justifyContent: 'flex-end' }}>
        <Button type="primary" onClick={() => router.push('/courses/new')}>+ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£</Button>
      </div>
      <Table<CourseDataType>
        className={styles.customTable}
        columns={fixedColumns}
        dataSource={dataSource}
        pagination={{ pageSize: 10 }} // ‡πÄ‡∏û‡∏¥‡πà‡∏° Pagination ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°
        scroll={{ x: 2500, y: 500 }} // ‡∏õ‡∏£‡∏±‡∏ö scroll x ‡πÉ‡∏´‡πâ‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô
        bordered
      />
    </Flex>
  );
};

export default App;